// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  firstName    String?
  lastName     String?
  emailAddress String   @unique
  imageUrl     String?
  studio       Media?
  trial        Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Clerk specific fields
  clerkId      String  @unique // Clerk user ID
  username     String? @unique
  mediaMediaId String?

  // Relations
  workspaces WorkSpace[]

  @@index([firstName, lastName, emailAddress])
  @@map("users")
}

enum PRESET {
  HD
  SD
}

model Media {
  id        String   @id @default(cuid())
  camera    String?
  mic       String?
  screen    String?
  preset    PRESET   @default(SD)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  User   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("media")
}

enum Type {
  PERSONAL
  PUBLIC
}

model WorkSpace {
  id        String   @id @default(cuid())
  name      String
  type      Type     @default(PERSONAL)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("workspaces") 
}
